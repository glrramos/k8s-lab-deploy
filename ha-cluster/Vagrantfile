# Vagrantfile

# Load external variables file
require './variables'

Vagrant.configure("2") do |config|

  # Loop to deploy masters
  (1..3).each do |i|
    config.vm.define Variables::MASTER_NAMES[i - 1] do |master|
      master.vm.box = "ubuntu/jammy64"
      master.vm.hostname = Variables::MASTER_NAMES[i - 1]
      
      # Use the IP addresses for each master
      master.vm.network "private_network", ip: Variables::MASTER_IPS[i - 1]

      # Provisioning: pass VM_IP as an environment variable
      master.vm.provision "shell" do |network|
        network.path = Variables::NETWORK_CONFIGURATION_SCRIPT_PATH
        network.env = { "IP_ADDRESS" => Variables::MASTER_IPS[i - 1] }
      end

      master.vm.provider "virtualbox" do |vb|
        vb.name = Variables::MASTER_NAMES[i - 1]
      end
    end
  end

  # Loop to deploy workers
  (1..3).each do |i|
    config.vm.define Variables::WORKER_NAMES[i - 1] do |worker|
      worker.vm.box = "ubuntu/jammy64"
      worker.vm.hostname = Variables::WORKER_NAMES[i - 1]
      
      # Use the IP addresses for each worker
      worker.vm.network "private_network", ip: Variables::WORKER_IPS[i - 1]

      # Provisioning: pass VM_IP as an environment variable
      worker.vm.provision "shell" do |network|
        network.path = Variables::NETWORK_CONFIGURATION_SCRIPT_PATH
        network.env = { "VM_IP" => Variables::WORKER_IPS[i - 1] }
      end

      worker.vm.provider "virtualbox" do |vb|
        vb.name = Variables::WORKER_NAMES[i - 1]
      end
    end
  end

  # Provider configuration for VirtualBox using Linked Clones and updated resources
  config.vm.provider "virtualbox" do |vb|
    vb.memory = Variables::MEMORY
    vb.cpus = Variables::CPU
    vb.customize ["modifyvm", :id, "--graphicscontroller", "vmsvga"]
    vb.linked_clone = true
  end

end
